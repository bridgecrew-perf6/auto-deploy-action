name: Test Deploy

on:
  pull_request:

jobs:
  test-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        node-version:
          - '14'
        auto-deploy-repos:
          - lando/auto-deploy-action
    steps:
      - name: Checkout action code
        uses: actions/checkout@v2
      # - name: Install node ${{ matrix.node-version }}
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     registry-url: https://registry.npmjs.org
      #     cache: yarn
      - name: Test Deploy
        uses: ./
        with:
          # Required props
          slug: ${{ matrix.auto-deploy-repos }}

          # Optional props (defaults)
          token: ${{ github.token }}
          # @TOTO: some setting so we can get versoon/package from git
          package: defaults to package manager manifest file - from package.json for yarn|node
          version: defaults to package manager manifest file - from package.json for yarn|node
          # TOOD: support other managers
          manager: prefers yarn fallback to npm
          branch: empty by default (pushes to default branch), otherwise checks out branch and uses that

          # Note: user is responsible for having correct tools and versions installed aka yarn on node14

          # Steps
          # step 1: validate input
            # get package, version, manager, etc
          # step 2: clone repo
            # clone repo
            # check out new branch if set
          # step 3: deploy package (command is dynamic based on manager selection)
            # yarn install PACKAGE@VERSION
            # npm install PACKAGE@VERSION
          # step 4: add, commit, push
            # git add . git commit -m "autogenerated message" git push origin
          # step 5: optionally open PR
